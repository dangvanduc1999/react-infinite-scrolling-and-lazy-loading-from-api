{"version":3,"sources":["assets/images/vietname.jpg","ArticlesPage.js","useArticlesQuery.js","constants.js","App.js","reportWebVitals.js","index.js"],"names":["RenderArticle","props","article","xs","sm","md","lg","className","src","VietnamPicture","alt","href","target","ArticlesPage","useState","query","setQuery","pageNumber","setPageNumber","loading","setLoading","error","setError","articles","setArticles","hasMore","setHasMore","useEffect","cancel","url","axios","method","cancelToken","CancelToken","c","then","res","prevArticles","Set","data","Math","ceil","totalResults","catch","e","isCancel","useArticlesQuery","observer","useRef","lastArticlesElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","console","log","Search","value","onChange","event","allowClear","style","width","placeholder","map","index","length","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c77fe569.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vietname.1f00f178.jpg\";","import useArticlesQuery from \"./useArticlesQuery\";\nimport {useCallback, useRef, useState} from \"react\";\nimport { Spin, Input, Col, Row } from 'antd';\nimport \"./assets/css/ArticlesPage.css\";\nimport 'antd/dist/antd.css';\nimport VietnamPicture from \"./assets/images/vietname.jpg\";\n\nconst RenderArticle = (props) => {\n    const {\n        article\n    } = props;\n    return (\n        <Row>\n            <Col xs={24} sm={24} md={8} lg={6} className=\"article_image_wrapper\">\n                <img src={article[\"urlToImage\"] ?? VietnamPicture} alt=\"\"/>\n            </Col>\n            <Col xs={24} sm={24} md={16} lg={18} className=\"article_content\">\n                <a href={article[\"url\"]} target=\"_blank\" className=\"article_title\">\n                    {article[\"title\"]}\n                </a>\n                <div className=\"article_description\">\n                    {article[\"description\"]}\n                </div>\n            </Col>\n        </Row>\n    )\n}\n\nconst ArticlesPage = (props) => {\n    const [query, setQuery] = useState('')\n    const [pageNumber, setPageNumber] = useState(1);\n    const {\n        articles,\n        hasMore,\n        loading,\n        error\n    } = useArticlesQuery(query, pageNumber);\n    const observer = useRef();\n    const lastArticlesElementRef = useCallback(node => {\n        if (loading) return\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting && hasMore) {\n                setPageNumber(prevPageNumber => prevPageNumber + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n    console.log(pageNumber)\n    console.log(query)\n    return (\n        <div className=\"articles_page_wrapper\">\n            <div className=\"articles_page_search\">\n                <Input.Search value={query} onChange={(event) => {\n                    setQuery(event.target.value);\n                    setPageNumber(1);\n                }} allowClear style={{ width: 300 }} placeholder=\"Enter keyword ...\" className=\"search_input\"/>\n            </div>\n            <div className=\"articles_page_body\">\n                {\n                    articles.map((article, index) => {\n                        if (articles.length === index + 1) {\n                            return (\n                                <div className=\"article_item\" ref={lastArticlesElementRef}>\n                                    <RenderArticle article={article}/>\n                                </div>\n                            )\n                        } else {\n                            return (\n                                <div className=\"article_item\">\n                                    <RenderArticle article={article}/>\n                                </div>\n                            )\n                        }\n                    })\n                }\n                {\n                    loading ?\n                        <div className=\"loading\">\n                            <Spin />\n                        </div>\n                        :\n                        <>\n                            {articles.length === 0 && <div>\n                                No article\n                            </div>}\n                        </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ArticlesPage;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {API_KEY, PAGE_SIZE} from \"./constants\";\n\nexport default function useArticlesQuery(query, pageNumber) {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [articles, setArticles] = useState([]);\n    const [hasMore, setHasMore] = useState(false);\n\n    useEffect(() => {\n        setArticles([]);\n    }, [query])\n\n    useEffect(() => {\n        let cancel\n        setLoading(true);\n        setError(false);\n        let url = `https://newsapi.org/v2/everything?q=${query}&apiKey=${API_KEY}&page=${pageNumber}&pageSize=${PAGE_SIZE}&domains=techcrunch.com,`;\n        axios({\n            method: 'GET',\n            url: url,\n            cancelToken: new axios.CancelToken(c => cancel = c)\n        }).then(res => {\n            setArticles(prevArticles => {\n                return [...new Set([...prevArticles, ...res.data.articles])]\n            })\n            setHasMore(pageNumber < Math.ceil(res.data.totalResults/PAGE_SIZE))\n            setLoading(false)\n        }).catch(e => {\n            setLoading(false)\n            setError(true)\n            if (axios.isCancel(e)) return\n        })\n        return () => cancel()\n    }, [query, pageNumber])\n\n    return { loading, error, articles, hasMore }\n}","export const API_KEY = 'fa015fd4f1ba43bca3d0e03493de1629';\nexport const PAGE_SIZE = 5;","import './App.css';\nimport ArticlesPage from \"./ArticlesPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ArticlesPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}